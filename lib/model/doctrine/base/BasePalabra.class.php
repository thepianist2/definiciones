<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Palabra', 'doctrine');

/**
 * BasePalabra
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idUsuario
 * @property integer $idSubCategoria
 * @property text $textoPalabra
 * @property text $textoDefinicion
 * @property boolean $borrado
 * @property boolean $activo
 * @property string $imagen
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $RegistroPalabra
 * @property SubCategoria $SubCategoria
 * @property Doctrine_Collection $Test
 * 
 * @method integer             getIdUsuario()       Returns the current record's "idUsuario" value
 * @method integer             getIdSubCategoria()  Returns the current record's "idSubCategoria" value
 * @method text                getTextoPalabra()    Returns the current record's "textoPalabra" value
 * @method text                getTextoDefinicion() Returns the current record's "textoDefinicion" value
 * @method boolean             getBorrado()         Returns the current record's "borrado" value
 * @method boolean             getActivo()          Returns the current record's "activo" value
 * @method string              getImagen()          Returns the current record's "imagen" value
 * @method sfGuardUser         getSfGuardUser()     Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getRegistroPalabra() Returns the current record's "RegistroPalabra" collection
 * @method SubCategoria        getSubCategoria()    Returns the current record's "SubCategoria" value
 * @method Doctrine_Collection getTest()            Returns the current record's "Test" collection
 * @method Palabra             setIdUsuario()       Sets the current record's "idUsuario" value
 * @method Palabra             setIdSubCategoria()  Sets the current record's "idSubCategoria" value
 * @method Palabra             setTextoPalabra()    Sets the current record's "textoPalabra" value
 * @method Palabra             setTextoDefinicion() Sets the current record's "textoDefinicion" value
 * @method Palabra             setBorrado()         Sets the current record's "borrado" value
 * @method Palabra             setActivo()          Sets the current record's "activo" value
 * @method Palabra             setImagen()          Sets the current record's "imagen" value
 * @method Palabra             setSfGuardUser()     Sets the current record's "sfGuardUser" value
 * @method Palabra             setRegistroPalabra() Sets the current record's "RegistroPalabra" collection
 * @method Palabra             setSubCategoria()    Sets the current record's "SubCategoria" value
 * @method Palabra             setTest()            Sets the current record's "Test" collection
 * 
 * @package    definiciones
 * @subpackage model
 * @author     Fabian Allel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePalabra extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('palabra');
        $this->hasColumn('idUsuario', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('idSubCategoria', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('textoPalabra', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('textoDefinicion', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('borrado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('imagen', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'idUsuario',
             'foreign' => 'id'));

        $this->hasMany('RegistroPalabra', array(
             'local' => 'id',
             'foreign' => 'idPalabra'));

        $this->hasOne('SubCategoria', array(
             'local' => 'idSubCategoria',
             'foreign' => 'id'));

        $this->hasMany('Test', array(
             'local' => 'id',
             'foreign' => 'idPalabra'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}