<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Perfil', 'doctrine');

/**
 * BasePerfil
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nombre
 * @property text $descripcion
 * @property boolean $activo
 * @property boolean $editable
 * @property boolean $borrado
 * @property Doctrine_Collection $Permiso
 * @property Doctrine_Collection $Usuario
 * 
 * @method string              getNombre()      Returns the current record's "nombre" value
 * @method text                getDescripcion() Returns the current record's "descripcion" value
 * @method boolean             getActivo()      Returns the current record's "activo" value
 * @method boolean             getEditable()    Returns the current record's "editable" value
 * @method boolean             getBorrado()     Returns the current record's "borrado" value
 * @method Doctrine_Collection getPermiso()     Returns the current record's "Permiso" collection
 * @method Doctrine_Collection getUsuario()     Returns the current record's "Usuario" collection
 * @method Perfil              setNombre()      Sets the current record's "nombre" value
 * @method Perfil              setDescripcion() Sets the current record's "descripcion" value
 * @method Perfil              setActivo()      Sets the current record's "activo" value
 * @method Perfil              setEditable()    Sets the current record's "editable" value
 * @method Perfil              setBorrado()     Sets the current record's "borrado" value
 * @method Perfil              setPermiso()     Sets the current record's "Permiso" collection
 * @method Perfil              setUsuario()     Sets the current record's "Usuario" collection
 * 
 * @package    definiciones
 * @subpackage model
 * @author     Fabian Allel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePerfil extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('perfil');
        $this->hasColumn('nombre', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('descripcion', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('editable', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('borrado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Permiso', array(
             'local' => 'id',
             'foreign' => 'idPerfil'));

        $this->hasMany('Usuario', array(
             'local' => 'id',
             'foreign' => 'idPerfil'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}