<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Piso', 'doctrine');

/**
 * BasePiso
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idUsuario
 * @property text $direccion
 * @property float $coordenadaX
 * @property float $coordenadaY
 * @property text $metro
 * @property text $linea
 * @property string $pais
 * @property text $contacto
 * @property text $caracteristicasPrecio
 * @property integer $dormitorios
 * @property integer $banios
 * @property string $precio
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $ImagenPiso
 * 
 * @method integer             getIdUsuario()             Returns the current record's "idUsuario" value
 * @method text                getDireccion()             Returns the current record's "direccion" value
 * @method float               getCoordenadaX()           Returns the current record's "coordenadaX" value
 * @method float               getCoordenadaY()           Returns the current record's "coordenadaY" value
 * @method text                getMetro()                 Returns the current record's "metro" value
 * @method text                getLinea()                 Returns the current record's "linea" value
 * @method string              getPais()                  Returns the current record's "pais" value
 * @method text                getContacto()              Returns the current record's "contacto" value
 * @method text                getCaracteristicasPrecio() Returns the current record's "caracteristicasPrecio" value
 * @method integer             getDormitorios()           Returns the current record's "dormitorios" value
 * @method integer             getBanios()                Returns the current record's "banios" value
 * @method string              getPrecio()                Returns the current record's "precio" value
 * @method sfGuardUser         getSfGuardUser()           Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getImagenPiso()            Returns the current record's "ImagenPiso" collection
 * @method Piso                setIdUsuario()             Sets the current record's "idUsuario" value
 * @method Piso                setDireccion()             Sets the current record's "direccion" value
 * @method Piso                setCoordenadaX()           Sets the current record's "coordenadaX" value
 * @method Piso                setCoordenadaY()           Sets the current record's "coordenadaY" value
 * @method Piso                setMetro()                 Sets the current record's "metro" value
 * @method Piso                setLinea()                 Sets the current record's "linea" value
 * @method Piso                setPais()                  Sets the current record's "pais" value
 * @method Piso                setContacto()              Sets the current record's "contacto" value
 * @method Piso                setCaracteristicasPrecio() Sets the current record's "caracteristicasPrecio" value
 * @method Piso                setDormitorios()           Sets the current record's "dormitorios" value
 * @method Piso                setBanios()                Sets the current record's "banios" value
 * @method Piso                setPrecio()                Sets the current record's "precio" value
 * @method Piso                setSfGuardUser()           Sets the current record's "sfGuardUser" value
 * @method Piso                setImagenPiso()            Sets the current record's "ImagenPiso" collection
 * 
 * @package    definiciones
 * @subpackage model
 * @author     Fabian Allel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePiso extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('piso');
        $this->hasColumn('idUsuario', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('direccion', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('coordenadaX', 'float', 10, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '6',
             ));
        $this->hasColumn('coordenadaY', 'float', 10, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '6',
             ));
        $this->hasColumn('metro', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('linea', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('pais', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('contacto', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('caracteristicasPrecio', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('dormitorios', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('banios', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('precio', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'idUsuario',
             'foreign' => 'id'));

        $this->hasMany('ImagenPiso', array(
             'local' => 'id',
             'foreign' => 'idPiso',
             'onDelete' => 'Cascade'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}