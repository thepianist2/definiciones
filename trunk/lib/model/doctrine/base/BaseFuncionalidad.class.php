<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Funcionalidad', 'doctrine');

/**
 * BaseFuncionalidad
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $idmodulo
 * @property string $credencial
 * @property string $descripcion
 * @property string $aplicacion
 * @property Modulo $Modulo
 * @property Doctrine_Collection $Permiso
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method integer             getIdmodulo()    Returns the current record's "idmodulo" value
 * @method string              getCredencial()  Returns the current record's "credencial" value
 * @method string              getDescripcion() Returns the current record's "descripcion" value
 * @method string              getAplicacion()  Returns the current record's "aplicacion" value
 * @method Modulo              getModulo()      Returns the current record's "Modulo" value
 * @method Doctrine_Collection getPermiso()     Returns the current record's "Permiso" collection
 * @method Funcionalidad       setId()          Sets the current record's "id" value
 * @method Funcionalidad       setIdmodulo()    Sets the current record's "idmodulo" value
 * @method Funcionalidad       setCredencial()  Sets the current record's "credencial" value
 * @method Funcionalidad       setDescripcion() Sets the current record's "descripcion" value
 * @method Funcionalidad       setAplicacion()  Sets the current record's "aplicacion" value
 * @method Funcionalidad       setModulo()      Sets the current record's "Modulo" value
 * @method Funcionalidad       setPermiso()     Sets the current record's "Permiso" collection
 * 
 * @package    definiciones
 * @subpackage model
 * @author     Fabian Allel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFuncionalidad extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('funcionalidad');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('idmodulo', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('credencial', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('aplicacion', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Modulo', array(
             'local' => 'idmodulo',
             'foreign' => 'id'));

        $this->hasMany('Permiso', array(
             'local' => 'id',
             'foreign' => 'idfuncionalidad'));
    }
}